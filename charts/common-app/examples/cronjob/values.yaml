# nameOverride -- defines as a release-related resource name
nameOverride: ""

ownerReference:
  # ownerReference.domain -- specifies the application belong to which product domain
  domain: "common"
  # ownerReference.team -- specifies the application belong to which team
  team: "core"

global:
  # global.imagePullSecrets -- specifies list of image pull secrets attached to the pod
  imagePullSecrets:
    - name: github-cred

  image:
    # global.image.repository -- specifies which image container registry being used
    repository: ghcr.io/ardikabs/etc/podinfo
    # global.image.pullPolicy -- specifies what policy for the image pull
    pullPolicy: IfNotPresent
    # global.image.tag -- specifies which image container version being used
    tag: "6.3.3"

  # global.channel -- specifies application deployment channel (supported values: `stable` and `canary`)
  channel: stable

  # global.managedBy -- mark the manager of the resource, default to 'Helm'
  managedBy: "manual"

app:
  # app.enabled -- specifies whether to create Deployment object
  enabled: false

job:
  # job.enabled -- specifies whether to create Job object
  enabled: true

  # job.resources -- specifies resource size of the job container
  resources:
    limits:
      cpu: 100m
      memory: 90Mi
    requests:
      cpu: 100m
      memory: 90Mi

  # job.command -- specifies list of job's container commands
  command:
    - jobexec

  # job.args -- specifies list of job's container args
  args:
    - -t
    - generate-report

  # job.initContainers -- specifies list of initContainers for the job's container
  initContainers:
    - name: download-kubectl
      image: alpine:3
      command: [sh, -c]
      args:
        - wget -q "https://storage.googleapis.com/kubernetes-release/release/v1.27.4/bin/linux/amd64/kubectl" -O /shared/bin/kubectl &&
          chmod +x /shared/bin/kubectl
      volumeMounts:
        - mountPath: /shared
          name: shared-volume

  # job.volumeMounts -- specifies mount point from list of extra volumes attached to the application
  volumeMounts:
    - name: shared-volume
      mountPath: /shared

  # job.activeDeadlineSeconds -- specifies the duration in seconds relative to the startTime that the job
  #  may be continuously active before the system tries to terminate it
  activeDeadlineSeconds: 0

  # job.backoffLimit -- specifies the number of retries before marking this job failed
  backoffLimit: 6

  # job.completionMode -- completionMode specifies how Pod completions are tracked.
  completionMode: NonIndexed

  # job.completions -- specifies the desired number of successfully finished pods the job should
  #  be run with
  completions: 1

  # job.parallelism -- specifies the maximum desired number of pods the job should run at any
  # given time
  parallelism: 1

  # job.ttlSecondAfterFinished -- define the lifetime of a Job that has finished execution.
  # If set, the job will be automatically deleted after Job finished (either Completed or Failed) in defined seconds.
  ttlSecondAfterFinished: null

  # job.jobAnnotations -- additional annotations attached to the Job
  jobAnnotations: {}

  # job.jobLabels -- additional labels attached to the Job
  jobLabels: {}

  cron:
    # job.cron.enabled -- specifies whether to create CronJob object instead of Job
    enabled: true

    # job.cron.suspend -- decide whether the cron job is suspended for a while
    suspend: false

    # job.cron.schedule -- the cron schedule
    schedule: "* * * * *"

    # job.cron.timeZone -- the time zone name for the given cron schedule
    timeZone: "UTC"

    # job.cron.concurrencyPolicy -- specifies how to treat concurrent executions of a Job, default to Allow
    # please refer to https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#concurrency-policy
    concurrencyPolicy: Allow

    # job.cron.startingDeadlineSeconds -- optional deadline in seconds for starting the job if it misses scheduled
    # time for any reason.
    startingDeadlineSeconds: 0

    # job.cron.annotations -- additional annotations attached to the CronJob
    annotations:
      custom: additional-annotation
    # job.cron.labels -- additional labels attached to the CronJob
    labels:
      custom: additional-label

# nodeSelector -- describes which node must be used for the pod
nodeSelector:
  webserver: public

# tolerations -- describes which toleration used for the pod to specify target node
tolerations:
  - operator: "Exists"

# topologySpreadConstraints -- describes how a group of pods ought to spread across topology domains
topologySpreadConstraints: []

# affinity -- specifies pod affinity rules
affinity:
  # affinity.nodeAffinity -- specifies node affinity rule
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        preference:
          matchExpressions:
            - key: label-1
              operator: In
              values:
                - key-1

  # affinity.podAffinity -- specifies pod affinity rule
  podAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - helloworld
          topologyKey: kubernetes.io/hostname

# env -- pod customized environment variable injected to the application container
env:
  - name: EXTERNAL_ENDPOINT
    value: "http://foo.bar"

# envFrom -- pod customized environment variable from selected reference to be injected to the application container
envFrom:
  - secretRef:
      name: secret
  - configMapRef:
      name: configmap

# podLabels -- additional labels attached to the pods
podLabels:
  app.kubernetes.io/workload-type: java

# podAnnotations -- additional annotations attached to the pods
podAnnotations:
  prometheus.io/scrape: "false"

# extraVolumes -- specifies a list of extra volumes to be attached to the pod
extraVolumes:
  - name: shared-volume
    emptyDir: {}

# securityContext -- specifies security context applied to the pod
securityContext:
  runAsUser: 1000
  runAsGroup: 3000
  fsGroup: 2000

# terminationGracePeriodSeconds -- duration in seconds the pod needs to terminate gracefully
terminationGracePeriodSeconds: 30
