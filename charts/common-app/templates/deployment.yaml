{{- if .Values.app.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common-app.name" . }}-{{ .Values.global.channel }}
  labels: {{- include "common-app.labels" . | nindent 4 }}
    {{- with .Values.app.deploymentLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.app.deploymentAnnotations }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if not .Values.app.autoscaling.enabled }}
  replicas: {{ .Values.app.replicas }}
{{- end }}
  strategy:
    rollingUpdate:
      maxSurge: {{  .Values.app.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.app.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  minReadySeconds: 0
  selector:
    matchLabels: {{- include "common-app.podSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if gt (float64 .Values.podLastRestart) 0.0 }}
        app.kubernetes.io/last-restart: {{ .Values.podLastRestart | quote }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels: {{- include "common-app.labels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Release.Name }}
          {{- include "common-app.appCmdArgs" . | indent 10 }}
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          {{- with .Values.app.containerPorts }}
          ports:
          {{- range $key, $value := . }}
            - name: {{ $key }}
              containerPort: {{ $value.port }}
              protocol: {{ $value.protocol }}
          {{- end }}
          {{- end }}
          {{ if .Values.app.livenessProbe.enabled -}}
          {{- $probe := .Values.app.livenessProbe -}}
          {{- $_ := unset $probe "enabled" -}}
          livenessProbe: {{- $probe | toYaml | nindent 12 }}
          {{- end }}
          {{ if .Values.app.readinessProbe.enabled -}}
          {{- $probe := .Values.app.readinessProbe -}}
          {{- $_ := unset $probe "enabled" -}}
          readinessProbe: {{- $probe | toYaml | nindent 12 }}
          {{ end -}}
          resources: {{- toYaml .Values.app.resources | nindent 12 }}
          {{- with .Values.env }}
          env: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.envFrom }}
          envFrom: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.app.volumeMounts }}
          volumeMounts: {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.extraVolumes }}
      volumes: {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext: {{- toYaml .Values.securityContext | nindent 8 }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}

{{- end }}
